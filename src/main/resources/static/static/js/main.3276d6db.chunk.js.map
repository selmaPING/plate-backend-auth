{"version":3,"sources":["http-common.js","services/radnik.service.js","components/add-radnik.component.js","components/radnik.component.js","components/radnik-list.component.js","services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","common/EventBus.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","ime","AddRadnik","props","onChangeJMB","bind","onChangeJMBG","onChangeIme","onChangePrezime","onChangeImeOca","onChangeSpol","onChangeDatumRodjenja","onChangeMjestoRodjenja","onChangeOpcinaRodjenja","onChangeDrzavaRodjenja","onChangeOpcinaStanovanja","onChangeMjestoStanovanja","onChangeUlica","onChangeBrojUlice","onChangeNetoOsnovica","onChangeOrgDio","onChangeOrgJedinica","onChangeDatumZaposlenja","onChangeRadnoMjesto","saveRadnik","newRadnik","state","jmb","jmbg","prezime","imeOca","spol","datumRodjenja","mjestoRodjenja","opcinaRodjenja","drzavaRodjenja","opcinaStanovanja","mjestoStanovanja","ulica","brojUlice","netoOsnovica","orgDio","orgJedinica","datumZaposlenja","radnoMjesto","submitted","e","this","setState","target","value","console","log","RadnikDataService","then","response","catch","className","onClick","htmlFor","type","required","onChange","name","Component","Radnik","getRadnik","updateRadnik","deleteRadnik","currentRadnik","message","match","params","prevState","update","history","push","RadniciList","onChangeSearchIme","retrieveRadnici","refreshList","setActiveRadnik","removeAllRadnici","searchIme","radnici","currentIndex","getAll","radnik","index","deleteAll","findByTitle","placeholder","map","key","JMB","JMBG","to","API_URL","username","password","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","role","Login","handleLogin","onChangeUsername","onChangePassword","loading","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","validations","disabled","style","display","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","user","Home","content","UserService","getPublicContent","Profile","redirect","userReady","currentUser","getCurrentUser","substring","substr","roles","eventBus","on","event","callback","document","addEventListener","detail","dispatch","dispatchEvent","CustomEvent","remove","removeEventListener","BoardUser","getUserBoard","status","EventBus","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","App","logOut","showModeratorBoard","showAdminBoard","undefined","includes","logout","href","exact","path","component","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3276d6db.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://app-za-plate.herokuapp.com\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});\r\n\r\n/*\"http://localhost:8081/api\"*/\r\n/*https://app-za-plate.herokuapp.com*/","import http from \"../http-common\";\r\n\r\nclass RadnikDataService {\r\n  getAll() {\r\n    return http.get(\"/radnici\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/radnici/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/radnici\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/radnici/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/radnici/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/radnici`);\r\n  }\r\n\r\n  findByTitle(ime) {\r\n    return http.get(`/radnici?ime=${ime}`);\r\n  }\r\n}\r\n\r\nexport default new RadnikDataService();","import React, { Component } from \"react\";\r\nimport RadnikDataService from \"../services/radnik.service\";\r\n\r\nexport default class AddRadnik extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeJMB = this.onChangeJMB.bind(this);\r\n    this.onChangeJMBG = this.onChangeJMBG.bind(this);\r\n    this.onChangeIme = this.onChangeIme.bind(this);\r\n    this.onChangePrezime = this.onChangePrezime.bind(this);\r\n    this.onChangeImeOca = this.onChangeImeOca.bind(this);\r\n    this.onChangeSpol = this.onChangeSpol.bind(this);\r\n    this.onChangeDatumRodjenja = this.onChangeDatumRodjenja.bind(this);\r\n    this.onChangeMjestoRodjenja = this.onChangeMjestoRodjenja.bind(this);\r\n    this.onChangeOpcinaRodjenja = this.onChangeOpcinaRodjenja.bind(this);\r\n    this.onChangeDrzavaRodjenja = this.onChangeDrzavaRodjenja.bind(this);\r\n    this.onChangeOpcinaStanovanja = this.onChangeOpcinaStanovanja.bind(this);\r\n    this.onChangeMjestoStanovanja = this.onChangeMjestoStanovanja.bind(this);\r\n    this.onChangeUlica = this.onChangeUlica.bind(this);\r\n    this.onChangeBrojUlice = this.onChangeBrojUlice.bind(this);\r\n    this.onChangeNetoOsnovica = this.onChangeNetoOsnovica.bind(this);\r\n    this.onChangeOrgDio = this.onChangeOrgDio.bind(this);\r\n    this.onChangeOrgJedinica = this.onChangeOrgJedinica.bind(this);\r\n    this.onChangeDatumZaposlenja = this.onChangeDatumZaposlenja.bind(this);\r\n    this.onChangeRadnoMjesto = this.onChangeRadnoMjesto.bind(this);\r\n    this.saveRadnik = this.saveRadnik.bind(this);\r\n    this.newRadnik = this.newRadnik.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      jmb: \"\",\r\n      jmbg: \"\",\r\n      ime: \"\",\r\n      prezime: \"\",\r\n      imeOca: \"\",\r\n      spol: \"\",\r\n      datumRodjenja: \"\",\r\n      mjestoRodjenja: \"\",\r\n      opcinaRodjenja: \"\",\r\n      drzavaRodjenja: \"\",\r\n      opcinaStanovanja: \"\",\r\n      mjestoStanovanja: \"\",\r\n      ulica: \"\",\r\n      brojUlice: \"\",\r\n      netoOsnovica: \"\",\r\n      orgDio: \"\",\r\n      orgJedinica: \"\",\r\n      datumZaposlenja: \"\",\r\n      radnoMjesto: \"\",\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeJMB(e) {\r\n    this.setState({\r\n      jmb: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeJMBG(e) {\r\n    this.setState({\r\n      jmbg: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeIme(e) {\r\n    this.setState({\r\n      ime: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePrezime(e) {\r\n    this.setState({\r\n      prezime: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeImeOca(e) {\r\n    this.setState({\r\n      imeOca: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeSpol(e) {\r\n    this.setState({\r\n      spol: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDatumRodjenja(e) {\r\n    this.setState({\r\n      datumRodjenja: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeMjestoRodjenja(e) {\r\n    this.setState({\r\n      mjestoRodjenja: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeOpcinaRodjenja(e) {\r\n    this.setState({\r\n      opcinaRodjenja: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDrzavaRodjenja(e) {\r\n    this.setState({\r\n      drzavaRodjenja: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeOpcinaStanovanja(e) {\r\n    this.setState({\r\n      opcinaStanovanja: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeMjestoStanovanja(e) {\r\n    this.setState({\r\n      mjestoStanovanja: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeUlica(e) {\r\n    this.setState({\r\n      ulica: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeBrojUlice(e) {\r\n    this.setState({\r\n      brojUlice: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeNetoOsnovica(e) {\r\n    this.setState({\r\n      netoOsnovica: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeOrgDio(e) {\r\n    this.setState({\r\n      orgDio: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeOrgJedinica(e) {\r\n    this.setState({\r\n      orgJedinica: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeDatumZaposlenja(e) {\r\n    this.setState({\r\n      datumZaposlenja: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeRadnoMjesto(e) {\r\n    this.setState({\r\n      radnoMjesto: e.target.value\r\n    });\r\n  }\r\n\r\n  saveRadnik() {\r\n    var data = {\r\n      jmb: this.state.jmb,\r\n      jmbg: this.state.jmbg,\r\n      ime: this.state.ime,\r\n      prezime: this.state.prezime,\r\n      imeOca: this.state.imeOca,\r\n      spol: this.state.spol,\r\n      datumRodjenja: this.state.datumRodjenja,\r\n      mjestoRodjenja: this.state.mjestoRodjenja,\r\n      opcinaRodjenja: this.state.opcinaRodjenja,\r\n      drzavaRodjenja: this.state.drzavaRodjenja,\r\n      opcinaStanovanja: this.state.opcinaStanovanja,\r\n      mjestoStanovanja: this.state.mjestoStanovanja,\r\n      ulica: this.state.ulica,\r\n      brojUlice: this.state.brojUlice,\r\n      netoOsnovica: this.state.netoOsnovica,\r\n      orgDio: this.state.orgDio,\r\n      orgJedinica: this.state.orgJedinica,\r\n      datumZaposlenja: this.state.datumZaposlenja,\r\n      radnoMjesto: this.state.radnoMjesto\r\n    };\r\n    console.log(\"Ovdje su podaci var data:\",data);\r\n\r\n    RadnikDataService.create(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          jmb: response.data.jmb,\r\n          jmbg: response.data.jmbg,\r\n          ime: response.data.ime,\r\n          prezime: response.data.prezime,\r\n          imeOca: response.data.imeOca,\r\n          spol: response.data.spol,\r\n          datumRodjenja: response.data.datumRodjenja,\r\n          mjestoRodjenja: response.data.mjestoRodjenja,\r\n          opcinaRodjenja: response.data.opcinaRodjenja,\r\n          drzavaRodjenja: response.data.drzavaRodjenja,\r\n          opcinaStanovanja: response.data.opcinaStanovanja,\r\n          mjestoStanovanja: response.data.mjestoStanovanja,\r\n          ulica: response.data.ulica,\r\n          brojUlice: response.data.brojUlice,\r\n          netoOsnovica: response.data.netoOsnovica,\r\n          orgDio: response.data.orgDio,\r\n          orgJedinica: response.data.orgJedinica,\r\n          datumZaposlenja: response.data.datumZaposlenja,\r\n          radnoMjesto: response.data.radnoMjesto,\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newRadnik() {\r\n    this.setState({\r\n      id: null,\r\n      jmb: \"\",\r\n      jmbg: \"\",\r\n      ime: \"\",\r\n      prezime: \"\",\r\n      imeOca: \"\",\r\n      spol: \"\",\r\n      datumRodjenja: \"\",\r\n      mjestoRodjenja: \"\",\r\n      opcinaRodjenja: \"\",\r\n      drzavaRodjenja: \"\",\r\n      opcinaStanovanja: \"\",\r\n      mjestoStanovanja: \"\",\r\n      ulica: \"\",\r\n      brojUlice: \"\",\r\n      netoOsnovica: \"\",\r\n      orgDio: \"\",\r\n      orgJedinica: \"\",\r\n      datumZaposlenja: \"\",\r\n      radnoMjesto: \"\",\r\n\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Uspješno ste dodali!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newRadnik}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"jmb\">JMB</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"jmb\"\r\n                required\r\n                value={this.state.jmb}\r\n                onChange={this.onChangeJMB}\r\n                name=\"jmb\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"jmbg\">JMBG</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"jmbg\"\r\n                required\r\n                value={this.state.jmbg}\r\n                onChange={this.onChangeJMBG}\r\n                name=\"jmbg\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"ime\">Ime</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"ime\"\r\n                required\r\n                value={this.state.ime}\r\n                onChange={this.onChangeIme}\r\n                name=\"ime\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"prezime\">Prezime</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"prezime\"\r\n                required\r\n                value={this.state.prezime}\r\n                onChange={this.onChangePrezime}\r\n                name=\"prezime\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"imeOca\">Ime oca</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"imeOca\"\r\n                required\r\n                value={this.state.imeOca}\r\n                onChange={this.onChangeImeOca}\r\n                name=\"imeOca\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"spol\">Spol</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"spol\"\r\n                required\r\n                value={this.state.spol}\r\n                onChange={this.onChangeSpol}\r\n                name=\"spol\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"datumRodjenja\">Datum rođenja</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"datumRodjenja\"\r\n                required\r\n                value={this.state.datumRodjenja}\r\n                onChange={this.onChangeDatumRodjenja}\r\n                name=\"datumRodjenja\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"mjestoRodjenja\">Mjesto rođenja</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"mjestoRodjenja\"\r\n                required\r\n                value={this.state.mjestoRodjenja}\r\n                onChange={this.onChangeMjestoRodjenja}\r\n                name=\"mjestoRodjenja\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"opcinaRodjenja\">OpĆina rođenja</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"opcinaRodjenja\"\r\n                required\r\n                value={this.state.opcinaRodjenja}\r\n                onChange={this.onChangeOpcinaRodjenja}\r\n                name=\"opcinaRodjenja\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"drzavaRodjenja\">Država rođenja</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"drzavaRodjenja\"\r\n                required\r\n                value={this.state.drzavaRodjenja}\r\n                onChange={this.onChangeDrzavaRodjenja}\r\n                name=\"drzavaRodjenja\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"opcinaStanovanja\">Općina stanovanja</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"opcinaStanovanja\"\r\n                required\r\n                value={this.state.opcinaStanovanja}\r\n                onChange={this.onChangeOpcinaStanovanja}\r\n                name=\"opcinaStanovanja\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"mjestoStanovanja\">Mjesto stanovanja</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"mjestoStanovanja\"\r\n                required\r\n                value={this.state.mjestoStanovanja}\r\n                onChange={this.onChangeMjestoStanovanja}\r\n                name=\"mjestoStanovanja\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"ulica\">Ulica</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"ulica\"\r\n                required\r\n                value={this.state.ulica}\r\n                onChange={this.onChangeUlica}\r\n                name=\"ulica\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"brojUlice\">Broj ulice</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"brojUlice\"\r\n                required\r\n                value={this.state.brojUlice}\r\n                onChange={this.onChangeBrojUlice}\r\n                name=\"brojUlice\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"netoOsnovica\">Neto osnovica</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"netoOsnovica\"\r\n                required\r\n                value={this.state.netoOsnovica}\r\n                onChange={this.onChangeNetoOsnovica}\r\n                name=\"netoOsnovica\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"orgDio\">Organizacijski dio</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"orgDio\"\r\n                required\r\n                value={this.state.orgDio}\r\n                onChange={this.onChangeOrgDio}\r\n                name=\"orgDio\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"orgJedinica\">Organizacijska jedinica</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"orgJedinica\"\r\n                required\r\n                value={this.state.orgJedinica}\r\n                onChange={this.onChangeOrgJedinica}\r\n                name=\"orgJedinica\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"datumZaposlenja\">Datum zaposlenja</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"datumZaposlenja\"\r\n                required\r\n                value={this.state.datumZaposlenja}\r\n                onChange={this.onChangeDatumZaposlenja}\r\n                name=\"datumZaposlenja\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"radnoMjesto\">Radno mjesto</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"radnoMjesto\"\r\n                required\r\n                value={this.state.radnoMjesto}\r\n                onChange={this.onChangeRadnoMjesto}\r\n                name=\"radnoMjesto\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveRadnik} className=\"btn btn-success\">\r\n              Dodaj\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport RadnikDataService from \"../services/radnik.service\";\r\n\r\nexport default class Radnik extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeJMB = this.onChangeJMB.bind(this);\r\n    this.onChangeJMBG = this.onChangeJMBG.bind(this);\r\n    this.onChangeIme = this.onChangeIme.bind(this);\r\n    this.onChangePrezime = this.onChangePrezime.bind(this);\r\n    this.onChangeImeOca = this.onChangeImeOca.bind(this);\r\n    this.onChangeSpol = this.onChangeSpol.bind(this);\r\n    this.onChangeDatumRodjenja = this.onChangeDatumRodjenja.bind(this);\r\n    this.onChangeMjestoRodjenja = this.onChangeMjestoRodjenja.bind(this);\r\n    this.onChangeOpcinaRodjenja = this.onChangeOpcinaRodjenja.bind(this);\r\n    this.onChangeDrzavaRodjenja = this.onChangeDrzavaRodjenja.bind(this);\r\n    this.onChangeOpcinaStanovanja = this.onChangeOpcinaStanovanja.bind(this);\r\n    this.onChangeMjestoStanovanja = this.onChangeMjestoStanovanja.bind(this);\r\n    this.onChangeUlica = this.onChangeUlica.bind(this);\r\n    this.onChangeBrojUlice = this.onChangeBrojUlice.bind(this);\r\n    this.onChangeNetoOsnovica = this.onChangeNetoOsnovica.bind(this);\r\n    this.onChangeOrgDio = this.onChangeOrgDio.bind(this);\r\n    this.onChangeOrgJedinica = this.onChangeOrgJedinica.bind(this);\r\n    this.onChangeDatumZaposlenja = this.onChangeDatumZaposlenja.bind(this);\r\n    this.onChangeRadnoMjesto = this.onChangeRadnoMjesto.bind(this);\r\n\r\n    this.getRadnik = this.getRadnik.bind(this);\r\n    this.updateRadnik = this.updateRadnik.bind(this);\r\n    this.deleteRadnik = this.deleteRadnik.bind(this);\r\n\r\n    this.state = {\r\n      currentRadnik: {\r\n        id: null,\r\n        jmb: \"\",\r\n        jmbg: \"\",\r\n        ime: \"\",\r\n        prezime: \"\",\r\n        imeOca: \"\",\r\n        spol: \"\",\r\n        datumRodjenja: \"\",\r\n        mjestoRodjenja: \"\",\r\n        opcinaRodjenja: \"\",\r\n        drzavaRodjenja: \"\",\r\n        opcinaStanovanja: \"\",\r\n        mjestoStanovanja: \"\",\r\n        ulica: \"\",\r\n        brojUlice: \"\",\r\n        netoOsnovica: \"\",\r\n        orgDio: \"\",\r\n        orgJedinica: \"\",\r\n        datumZaposlenja: \"\",\r\n        radnoMjesto: \"\"\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRadnik(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeJMB(e) {\r\n    const jmb = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentRadnik: {\r\n          ...prevState.currentRadnik,\r\n          jmb: jmb\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeJMBG(e) {\r\n    const jmbg = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentRadnik: {\r\n          ...prevState.currentRadnik,\r\n          jmbg: jmbg\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeIme(e) {\r\n    const ime = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentRadnik: {\r\n          ...prevState.currentRadnik,\r\n          ime: ime\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePrezime(e) {\r\n    const prezime = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        prezime: prezime\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeImeOca(e) {\r\n    const imeOca = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        imeOca: imeOca\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeSpol(e) {\r\n    const spol = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        spol: spol\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeDatumRodjenja(e) {\r\n    const datumRodjenja = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        datumRodjenja: datumRodjenja\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeMjestoRodjenja(e) {\r\n    const mjestoRodjenja = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        mjestoRodjenja: mjestoRodjenja\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeOpcinaRodjenja(e) {\r\n    const opcinaRodjenja = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        opcinaRodjenja: opcinaRodjenja\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeDrzavaRodjenja(e) {\r\n    const drzavaRodjenja = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        drzavaRodjenja: drzavaRodjenja\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeOpcinaStanovanja(e) {\r\n    const opcinaStanovanja = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        opcinaStanovanja: opcinaStanovanja\r\n      }\r\n    }));\r\n  }\r\n  onChangeMjestoStanovanja(e) {\r\n    const mjestoStanovanja = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        mjestoStanovanja: mjestoStanovanja\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeUlica(e) {\r\n    const ulica = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        ulica: ulica\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeBrojUlice(e) {\r\n    const brojUlice = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        brojUlice: brojUlice\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeNetoOsnovica(e) {\r\n    const netoOsnovica = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        netoOsnovica: netoOsnovica\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeOrgDio(e) {\r\n    const orgDio = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        orgDio: orgDio\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeOrgJedinica(e) {\r\n    const orgJedinica = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        orgJedinica: orgJedinica\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeDatumZaposlenja(e) {\r\n    const datumZaposlenja = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        datumZaposlenja: datumZaposlenja\r\n      }\r\n    }));\r\n  }\r\n\r\n  onChangeRadnoMjesto(e) {\r\n    const radnoMjesto = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentRadnik: {\r\n        ...prevState.currentRadnik,\r\n        radnoMjesto: radnoMjesto\r\n      }\r\n    }));\r\n  }\r\n\r\n  getRadnik(id) {\r\n    RadnikDataService.get(id)\r\n      .then((response) => {\r\n        this.setState({\r\n          currentRadnik: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateRadnik() {\r\n    RadnikDataService.update(\r\n      this.state.currentRadnik.id,\r\n      this.state.currentRadnik\r\n    )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"Radnik je uspješno ažuriran!\"\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteRadnik() {\r\n    RadnikDataService.delete(this.state.currentRadnik.id)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.props.history.push(\"/radnici\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentRadnik } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentRadnik ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Radnici</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"jmb\">JMB</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"jmb\"\r\n                  required\r\n                  value={currentRadnik.jmb}\r\n                  onChange={this.onChangeJMB}\r\n                  name=\"jmb\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"jmbg\">JMBG</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"jmbg\"\r\n                  required\r\n                  value={currentRadnik.jmbg}\r\n                  onChange={this.onChangeJMBG}\r\n                  name=\"jmbg\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"ime\">Ime</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"ime\"\r\n                  required\r\n                  value={currentRadnik.ime}\r\n                  onChange={this.onChangeIme}\r\n                  name=\"ime\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"prezime\">Prezime</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"prezime\"\r\n                  required\r\n                  value={currentRadnik.prezime}\r\n                  onChange={this.onChangePrezime}\r\n                  name=\"prezime\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"imeOca\">Ime oca</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"imeOca\"\r\n                  required\r\n                  value={currentRadnik.imeOca}\r\n                  onChange={this.onChangeImeOca}\r\n                  name=\"imeOca\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"spol\">Spol</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"spol\"\r\n                  required\r\n                  value={currentRadnik.spol}\r\n                  onChange={this.onChangeSpol}\r\n                  name=\"spol\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"datumRodjenja\">Datum rođenja</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"datumRodjenja\"\r\n                  required\r\n                  value={currentRadnik.datumRodjenja}\r\n                  onChange={this.onChangeDrzavaRodjenja}\r\n                  name=\"datumRodjenja\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"mjestoRodjenja\">Mjesto rođenja</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"mjestoRodjenja\"\r\n                  required\r\n                  value={currentRadnik.mjestoRodjenja}\r\n                  onChange={this.onChangeMjestoRodjenja}\r\n                  name=\"mjestoRodjenja\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"opcinaRodjenja\">Općina rođenja</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"opcinaRodjenja\"\r\n                  required\r\n                  value={currentRadnik.opcinaRodjenja}\r\n                  onChange={this.onChangeOpcinaRodjenja}\r\n                  name=\"opcinaRodjenja\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"drzavaRodjenja\">Država rođenja</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"drzavaRodjenja\"\r\n                  required\r\n                  value={currentRadnik.drzavaRodjenja}\r\n                  onChange={this.onChangeDrzavaRodjenja}\r\n                  name=\"drzavaRodjenja\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"opcinaStanovanja\">Općina stanovanja</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"opcinaStanovanja\"\r\n                  required\r\n                  value={currentRadnik.opcinaStanovanja}\r\n                  onChange={this.onChangeOpcinaStanovanja}\r\n                  name=\"opcinaStanovanja\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"mjestoStanovanja\">Mjesto stanovanja</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"mjestoStanovanja\"\r\n                  required\r\n                  value={currentRadnik.mjestoStanovanja}\r\n                  onChange={this.onChangeMjestoStanovanja}\r\n                  name=\"mjestoStanovanja\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"ulica\">Ulica</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"ulica\"\r\n                  required\r\n                  value={currentRadnik.ulica}\r\n                  onChange={this.onChangeUlica}\r\n                  name=\"ulica\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"brojUlice\">Broj ulice</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"brojUlice\"\r\n                  required\r\n                  value={currentRadnik.brojUlice}\r\n                  onChange={this.onChangeBrojUlice}\r\n                  name=\"brojUlice\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"netoOsnovica\">Neto osnovica</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"netoOsnovica\"\r\n                  required\r\n                  value={currentRadnik.netoOsnovica}\r\n                  onChange={this.onChangeNetoOsnovica}\r\n                  name=\"netoOsnovica\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"orgDio\">Organizacijski dio</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"orgDio\"\r\n                  required\r\n                  value={currentRadnik.orgDio}\r\n                  onChange={this.onChangeOrgDio}\r\n                  name=\"orgDio\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"orgJedinica\">Organizacijska jedinica</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"orgJedinica\"\r\n                  required\r\n                  value={currentRadnik.orgJedinica}\r\n                  onChange={this.onChangeOrgJedinica}\r\n                  name=\"orgJedinica\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"datumZaposlenja\">Datum zaposlenja</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"datumZaposlenja\"\r\n                  required\r\n                  value={currentRadnik.datumZaposlenja}\r\n                  onChange={this.onChangeDatumZaposlenja}\r\n                  name=\"datumZaposlenja\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"radnoMjesto\">Radno mjesto</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"radnoMjesto\"\r\n                  required\r\n                  value={currentRadnik.radnoMjesto}\r\n                  onChange={this.onChangeRadnoMjesto}\r\n                  name=\"radnoMjesto\"\r\n                />\r\n              </div>\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteRadnik}\r\n            >\r\n              Izbriši\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateRadnik}\r\n            >\r\n              Ažuriraj\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Molimo Vas kliknite na Radnika...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport RadnikDataService from \"../services/radnik.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class RadniciList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchIme = this.onChangeSearchIme.bind(this);\r\n    this.retrieveRadnici = this.retrieveRadnici.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveRadnik = this.setActiveRadnik.bind(this);\r\n    this.removeAllRadnici = this.removeAllRadnici.bind(this);\r\n    this.searchIme = this.searchIme.bind(this);\r\n\r\n    this.state = {\r\n      radnici: [],\r\n      currentRadnik: null,\r\n      currentIndex: -1,\r\n      searchIme: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveRadnici();\r\n  }\r\n\r\n  onChangeSearchIme(e) {\r\n    const searchIme = e.target.value;\r\n\r\n    this.setState({\r\n      searchIme: searchIme\r\n    });\r\n  }\r\n\r\n  retrieveRadnici() {\r\n    RadnikDataService.getAll()\r\n      .then((response) => {\r\n        this.setState({\r\n          radnici: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveRadnici();\r\n    this.setState({\r\n      currentRadnik: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveRadnik(radnik, index) {\r\n    this.setState({\r\n      currentRadnik: radnik,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllRadnici() {\r\n    RadnikDataService.deleteAll()\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchIme() {\r\n    this.setState({\r\n      currentRadnik: null,\r\n      currentIndex: -1\r\n    });\r\n\r\n    RadnikDataService.findByTitle(this.state.searchIme)\r\n      .then((response) => {\r\n        this.setState({\r\n          radnici: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { searchIme, radnici, currentRadnik, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Traži po imenu...\"\r\n              value={searchIme}\r\n              onChange={this.onChangeSearchIme}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchIme}\r\n              >\r\n                Traži\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Lista Radnika</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {radnici &&\r\n              radnici.map((radnik, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveRadnik(radnik, index)}\r\n                  key={index}\r\n                >\r\n                  {radnik.ime}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllRadnici}\r\n          >\r\n            Izbriši sve radnike\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentRadnik ? (\r\n            <div>\r\n              <h4>Radnik</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>JMB:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.JMB}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>JMBG:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.JMBG}\r\n              </div>\r\n\r\n              <div>\r\n                <label>\r\n                  <strong>Ime:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.ime}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Prezime:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.prezime}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Ime oca:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.imeOca}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Spol:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.spol}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Datum rođenja:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.datumRodjenja}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Mjesto rođenja:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.mjestoRodjenja}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Općina rođenja:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.opcinaRodjenja}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Država rođenja:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.drzavaRodjenja}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Općina stanovanja:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.opcinaStanovanja}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Mjesto stanovanja:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.mjestoStanovanja}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Ulica:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.ulica}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Broj ulice:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.brojUlice}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Neto osnovica:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.netoOsnovica}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Organizacijski dio:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.orgDio}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Organizacijska jedinica:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.orgJedinica}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Datum zaposlenja:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.datumZaposlenja}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>Radno mjesto:</strong>\r\n                </label>{\" \"}\r\n                {currentRadnik.radnoMjesto}\r\n              </div>\r\n              <Link\r\n                to={\"/radnici/\" + currentRadnik.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Uredi\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Molimo Vas izaberite Radnika...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8081/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.username, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.email,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\r\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:8081/api/test/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getPublicContent().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { username: \"\" }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    if (!currentUser) this.setState({ redirect: \"/home\" });\r\n    this.setState({ currentUser: currentUser, userReady: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />\r\n    }\r\n\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {(this.state.userReady) ?\r\n        <div>\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>: null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const eventBus = {\r\n  on(event, callback) {\r\n    document.addEventListener(event, (e) => callback(e.detail));\r\n  },\r\n  dispatch(event, data) {\r\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n  },\r\n  remove(event, callback) {\r\n    document.removeEventListener(event, callback);\r\n  },\r\n};\r\n\r\nexport default eventBus;\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nexport default class BoardModerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getModeratorBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddRadnik from \"./components/add-radnik.component\";\nimport Radnik from \"./components/radnik.component\";\nimport RadniciList from \"./components/radnik-list.component\";\nimport AuthService from \"./services/auth.service\";\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\nimport EventBus from \"./common/EventBus\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n    componentDidMount() {\n      const user = AuthService.getCurrentUser();\n\n      if (user) {\n        this.setState({\n          currentUser: user,\n          showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n          showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n        });\n      }\n\n      EventBus.on(\"logout\", () => {\n        this.logOut();\n      });\n    }\n\n    componentWillUnmount() {\n      EventBus.remove(\"logout\");\n    }\n\n    logOut() {\n      AuthService.logout();\n      this.setState({\n        showModeratorBoard: false,\n        showAdminBoard: false,\n        currentUser: undefined,\n      });\n    }\n\n  render() {\n  const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/home\"} className=\"navbar-brand\">\n            Plate\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n                      <li className=\"nav-item\">\n                        <Link to={\"/radnici\"} className=\"nav-link\">\n                          Radnici\n                        </Link>\n                      </li>\n                      <li className=\"nav-item\">\n                        <Link to={\"/add-radnik\"} className=\"nav-link\">\n                          Dodaj radnika\n                        </Link>\n                      </li>            <li className=\"nav-item\">\n                                         <Link to={\"/home\"} className=\"nav-link\">\n                                           Home\n                                         </Link>\n                                       </li>\n\n                                       {showModeratorBoard && (\n                                         <li className=\"nav-item\">\n                                           <Link to={\"/mod\"} className=\"nav-link\">\n                                             Moderator Board\n                                           </Link>\n                                         </li>\n                                       )}\n\n                                       {showAdminBoard && (\n                                         <li className=\"nav-item\">\n                                           <Link to={\"/admin\"} className=\"nav-link\">\n                                             Admin Board\n                                           </Link>\n                                         </li>\n                                       )}\n\n                                       {currentUser && (\n                                         <li className=\"nav-item\">\n                                           <Link to={\"/user\"} className=\"nav-link\">\n                                             User\n                                           </Link>\n                                         </li>\n                                       )}\n                                     </div>\n\n                                     {currentUser ? (\n                                       <div className=\"navbar-nav ml-auto\">\n                                         <li className=\"nav-item\">\n                                           <Link to={\"/profile\"} className=\"nav-link\">\n                                             {currentUser.username}\n                                           </Link>\n                                         </li>\n                                         <li className=\"nav-item\">\n                                           <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                                             LogOut\n                                           </a>\n                                         </li>\n                                       </div>\n                                     ) : (\n                                       <div className=\"navbar-nav ml-auto\">\n                                         <li className=\"nav-item\">\n                                           <Link to={\"/login\"} className=\"nav-link\">\n                                             Login\n                                           </Link>\n                                         </li>\n\n                                         <li className=\"nav-item\">\n                                           <Link to={\"/register\"} className=\"nav-link\">\n                                             Sign Up\n                                           </Link>\n                                         </li>\n                                       </div>\n                                     )}\n                                   </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n                 <Route exact path={[\"/\", \"/home\"]} component={Home} />\n                      <Route exact path=\"/login\" component={Login} />\n                      <Route exact path=\"/register\" component={Register} />\n                      <Route exact path=\"/profile\" component={Profile} />\n                      <Route path=\"/user\" component={BoardUser} />\n                      <Route path=\"/mod\" component={BoardModerator} />\n                      <Route path=\"/admin\" component={BoardAdmin} />\n            <Route exact path=\"/radnici\" component={RadniciList} />\n            <Route exact path=\"/add-radnik\" component={AddRadnik} />\n            <Route path=\"/radnici/:id\" component={Radnik} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}